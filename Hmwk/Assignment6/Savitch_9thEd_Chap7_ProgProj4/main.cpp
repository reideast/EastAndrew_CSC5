/* 
    File:   main.cpp
    Author: Andrew Reid East
    Class: CSC-5 40718
    Created on February 8, 2015, 11:55 AM
    Purpose: Compute standard deviation
 */

//System Libraries
#include <iostream>
#include <cmath>
using namespace std;

//User Libraries

//Global Constants

//Function Prototypes
void test(double a[], int size);
void printArray(const double orig[], int size);

double stdDev(const double a[], int size);
double avg(const double a[], int size);


//Execution Begins Here
int main(int argc, char** argv)
{
  const int MAX = 30; //changed to int from last project's short since stats seems to imply larger sets of data
  
  //the problem calls for doubles, not float!
  double a[MAX] = {2,4,4,4,5,5,7,9};
  int size = 8;
  test(a, size); //should equal 2, using http://en.wikipedia.org/wiki/Standard_deviation example
  cout << endl;
  
  size = 9;
  double b[MAX] = {5,5,5,4,4,4,6,6,6};
  test(b, size); //should equal 0.816497 -- calculated by using Excel's STDEV.P (stdDev of population)
  cout << endl;
  
  size = 150;
  double c[150] = {0.914929861,0.564349087,0.885806521,0.603609491,0.454379346,0.765151102,0.584846129,0.019502871,0.234403163,0.586901117,0.451764229,0.562081862,0.197208196,0.227841036,0.101653056,0.627899866,0.408974938,0.796044692,0.9354066,0.925672432,0.504521033,0.977841096,0.650971272,0.260848498,0.595359832,0.146035243,0.648885703,0.717429256,0.744153859,0.884223182,0.541893651,0.527313116,0.864619188,0.406176226,0.231451514,0.245832965,0.634160545,0.489097164,0.472778748,0.100975816,0.63725689,0.869062193,0.44452822,0.508956377,0.693411348,0.841410988,0.306377828,0.711677059,0.127486358,0.858950969,0.318225694,0.843128751,0.488413995,0.203936548,0.956011262,0.27439189,0.393961243,0.567957232,0.926873759,0.253949612,0.668291558,0.743994799,0.588836876,0.995153819,0.344310777,0.277925469,0.86863972,0.647169432,0.137620815,0.377275169,0.442809145,0.942728561,0.405974521,0.535912645,0.945777762,0.941508347,0.226023018,0.38052311,0.955067578,0.123669503,0.416274037,0.4158651,0.494115649,0.622345341,0.677601809,0.923116515,0.512262606,0.447137442,0.02481415,0.395436852,0.36754954,0.109297144,0.300635836,0.287795944,0.715176299,0.570399785,0.11429222,0.16788241,0.161776885,0.462453898,0.849062127,0.492502279,0.824561279,0.322999219,0.00422824,0.375404207,0.847592023,0.368493148,0.668897231,0.768302671,0.137701099,0.800313074,0.295057848,0.993219166,0.131106307,0.456418226,0.125862394,0.604509693,0.105294419,0.973618553,0.390940273,0.332653297,0.117683403,0.119960872,0.538742799,0.854912869,0.085596296,0.336876141,0.065170342,0.363303568,0.90649738,0.924189777,0.429570942,0.281618391,0.702784124,0.892028341,0.877906655,0.138877088,0.785345592,0.730322395,0.452672304,0.87842379,0.322490615,0.981851469,0.132378609,0.431408788,0.245110004,0.777392306,0.161517543,0.57714993};
  test(c, size); // should be 0.27839018 (from excel)
  cout << endl;
  
  size = 150;
  double d[150] = {481,838,874,729,738,781,483,714,956,637,85,425,622,513,402,473,519,351,371,699,670,602,534,189,872,507,206,832,121,669,183,319,46,687,659,70,690,558,684,608,768,646,688,653,859,318,99,626,922,605,348,824,944,471,987,696,660,502,223,104,737,162,619,324,688,223,648,584,828,585,513,163,459,483,890,452,532,589,979,767,643,866,164,146,565,44,661,492,694,635,443,706,381,432,16,248,343,818,642,970,464,343,22,326,487,431,979,579,490,46,412,513,190,709,207,344,783,333,836,706,526,152,382,177,318,785,894,286,893,900,390,39,530,368,11,273,599,670,124,206,265,301,659,859,659,279,984,201,367,57};
  test(d, size); //259.2270404 from excel
  cout << endl;
  
  return 0;
}

double stdDev(const double a[], int size)
{
  double averageAll = avg(a, size);
  double runningTotal = 0.0f;
  for (int i = 0; i < size; ++i)
    runningTotal += (a[i] - averageAll) * (a[i] - averageAll); //difference squared
  runningTotal /= size;
  return sqrt(runningTotal);
}

double avg(const double a[], int size)
{
  double sum = 0.0f;
  for (int i = 0; i < size; ++i)
    sum += a[i];
  sum /= size;
  return sum;
}

void test(double a[], int size)
{
  printArray(a, size);
  cout << endl;
  double stDev = stdDev(a, size);
  cout << "stdDev()=" << stDev << endl;
}

void printArray(const double orig[], int size)
{
  for (int i = 0; i < size; ++i)
    cout << orig[i] << " ";
}
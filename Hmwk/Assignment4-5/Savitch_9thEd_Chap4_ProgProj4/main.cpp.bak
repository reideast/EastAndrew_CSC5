/* 
    File:   main.cpp
    Author: Andrew Reid East
    Class: CSC-5 40718
    Created on January 22, 2015, 9:12 PM
    Purpose: Create a function to convert integers 0..99 to their English equivalent. Test it with "ninety-nine bottles of beer on the wall".
 */

//System Libraries
#include <iostream>
#include <string>
using namespace std;

//User Libraries

//Global Constants

//Function Prototypes

//intToEnglish: returns a value from 0 to 99 in English, eg. 68 -> "Sixty-eight"
string intToEnglish(int value);
//Preconditions: value is 0-99, inclusive
//Postconditions: returns the value in English, or an error message for values out-of-range

//printVerse: prints a verse of "Ninety-Nine Bottles of Beer" to cout
void printVerse(int value);
//Preconditions: value is 0-99. intToEnglish takes a value, returns the string equivalent in English
//Postconditions: outputs a verse of the song to cout

//Execution Begins Here
int main(int argc, char** argv)
{
  //cout << "ninety-nine bottles of beer on the wall";
  // cout << intToEnglish(99) << endl;
  // cout << intToEnglish(98) << endl;
  // cout << intToEnglish(68) << endl;
  // cout << intToEnglish(60) << endl;
  // cout << intToEnglish(20) << endl;
  // cout << intToEnglish(19) << endl;
  // cout << intToEnglish(18) << endl;
  // cout << intToEnglish(11) << endl;
  // cout << intToEnglish(10) << endl;
  // cout << intToEnglish(1) << endl;
  
  for (int i = 99; i >= 1; --i)
    printVerse(i);
  return 0;
}

void printVerse(int value)
{
  string num = intToEnglish(value);
  cout << num << " bottles of beer on the wall," << endl;
  cout << num << " bottles of beer," << endl;
  cout << "Take one down, pass it around," << endl;
  cout << intToEnglish(value - 1) << " bottles of beer on the wall." << endl << endl;
}

string intToEnglish(int value)
{
  if (value < 0 || value > 99)
  {
    return "Error: The value must be between 0 and 99 to be converted to English.";
  }
  else
  {
    string english = "";
    switch (value / 10)
    {
      case 9: english = "Ninety-"; break;
      case 8: english = "Eighty-"; break;
      case 7: english = "Seventy-"; break;
      case 6: english = "Sixty-"; break;
      case 5: english = "Fifty-"; break;
      case 4: english = "Forty-"; break;
      case 3: english = "Thirty-"; break;
      case 2: english = "Twenty-"; break;
      case 1:
        switch (value)
        {
          case 19: english = "Nineteen"; break;
          case 18: english = "Eighteen"; break;
          case 17: english = "Seventeen"; break;
          case 16: english = "Sixteen"; break;
          case 15: english = "Fifteen"; break;
          case 14: english = "Fourteen"; break;
          case 13: english = "Thirteen"; break;
          case 12: english = "Twelve"; break;
          case 11: english = "Eleven"; break;
          case 10: english = "Ten"; break;
          default: english = "error: got to default in switch (teens)";
        }
        value = -1; //do not evaluate second switch statement to a result
        break;
      //case 0:
      //default:
        //this could happen only if the value is greater than 99
    }
    
    switch (value % 10)
    {
      case 9: english += "Nine"; break;
      case 8: english += "Eight"; break;
      case 7: english += "Seven"; break;
      case 6: english += "Six"; break;
      case 5: english += "Five"; break;
      case 4: english += "Four"; break;
      case 3: english += "Three"; break;
      case 2: english += "Two"; break;
      case 1: english += "One"; break;
      case 0:
        if (!value) //if value == zero
          english += "zero" ;
        else //else the tens digit equal something, eg. 20, 30. So, remove the dash added before
          english.resize(english.size() - 1);
        break;
      //default: //would reach this if the first switch statement evaluated to a "teen"
    }
    
    return english;
  }
}
/* 
    File:   main.cpp
    Author: Andrew Reid East
    Class: CSC-5 40718
    Created on January 25, 2015, 6:13 PM
    Purpose: Compute basal metabolic rate in terms of calories in a type of food, using person's weight
 */

//System Libraries
#include <iostream>
#include <cmath>
using namespace std;

//User Libraries

//Global Constants

//Function Prototypes

//calcBMR: Return a person's basal metabolic rate based on their weight
float calcBMR(float weight);
//Preconditions: weight is person's weight in Pounds. must be greater than 0.
//Postconditions: returns BMR in Calories or -1 for error

//caloriesBurned: Returns the calories burned in an exercise based on the intensity and length of the exercise and person's weight
float caloriesBurned(float intensity, float weight, float minutes);
//Preconditions:
//  intensity is a the factor showing how hard you work at an exercise, like 17 for sprinting or 8 for basketball
//  weight is person's weight in pounds
//  minutes is time elapsed exercising
//Postconditions:
//  returns Calories burned
//  returns -1 if any inputs were 0 or less

//GetInput: Get input from <iostream> between a minimum and maximum value
//  (From my Savitch_9thEd_Chap4_ProgProj1)
void getInput(string prompt, int& input, int min = 0, int max = ~(1 << (sizeof(int) * 8) - 1));
void getInput(string prompt, float& input, float min = 0, float max = 1.0e38f);
//Preconditions:
//  prompt contains something to display through cout.
//  input is an initialized variable.
//  min/max contains the range desired (inclusive)
//    if not included, min/max will be zero to the largest integer on this system (calculated a bit shift based on the number of bytes in an int, then inversion (only works on two's complement based systems!))
//    for a float, a hard-coded value of 1.0e38f is chosen (based on windows 7 x64 g++ machine)
//Postconditions:
//  input will contain a valid value within the range

//Execution Begins Here
int main(int argc, char** argv)
{
  //main program, loops until user asks to quit (copied from my Savitch_9thEd_Chap3_ProgProj1)
  bool isUserFinished = false; //controls main loop
  char quit = 0;
  while (!isUserFinished)
  {
    float weight = 0.0f, intensity = 0.0f, timeElapsed = 0.0f;
    int caloriesInFood = 0;
    getInput("What is your weight in lbs.? ", weight, 0, 1000);
    getInput("What is the estimated intensity of the exercise?\n  Examples:\n  Running at 10mph: 17\n  Running at 6mph: 10\n  Basketball: 8\n  Walking at 1mph: 1\n> ", intensity);
    getInput("How many minutes did you exercise? ", timeElapsed);
    getInput("How many Calories are in one serving of your favorite food? ", caloriesInFood);
    
    float caloriesBMR = calcBMR(weight);
    float caloriesUsedExercising = caloriesBurned(intensity, weight, timeElapsed);
    
    //algebra: 
    // calTotal = bmr + exercise + 1/10*calTotal --> 10% of calories total needed to digest
    // -0.1*calTotal              -0.1*calTotal
    // 0.9*calTotal = bmr + exercise
    // calTotal = (bmr + exercise) / 0.9
    float totalCaloriesPerDay = (caloriesBMR + caloriesUsedExercising) / 0.9;
    
    float caloriesUsedDigesting = totalCaloriesPerDay - caloriesBMR - caloriesUsedExercising;
    
    float servings = totalCaloriesPerDay / caloriesInFood;
    
    cout << endl;
    cout << "In one day, you need " << caloriesBMR << " calories to maintain your basal metabolic rate." << endl;
    cout << "You will also burn off " << caloriesUsedExercising << " calories exercising." << endl;
    cout << "To digest the total calories, your body will use up " << caloriesUsedDigesting << " calories." << endl;
    cout << "Therefore, you need " << totalCaloriesPerDay << " total calories per day." << endl;
    cout << endl;
    cout << "You must eat " << servings << " servings of your favorite food to maintain your current weight." << endl;
    
    //determine if the user would like to repeat the calculation (copied from my Savitch_9thEd_Chap3_ProgProj1)
    cout << endl;
    cout << "Would you like to do more calculations? (N to quit) ";
    cin >> quit;
    if (quit == 'N' || quit == 'n')
      isUserFinished = true;
    else
      cout << endl; //a blank line for readability
  }
  return 0;
}



float calcBMR(float weight)
{
  if (weight > 0)
  {
    return 70 * pow((weight / 2.2f), 0.756f);
  }
  else
  {
    return -1;
  }
}

float caloriesBurned(float intensity, float weight, float minutes)
{
  if (intensity > 0 && weight > 0 && minutes > 0)
  {
    return 0.0385 * intensity * weight * minutes;
  }
  else
  {
    return -1;
  }
}




void getInput(string prompt, int& input, int min, int max)
{
  bool isInputValid = false; //controls input loop (ie, loop until input is right)
  while (!isInputValid)
  {
    cout << prompt;
    cin >> input;
    if (input < min)
      cout << "The input cannot be less than " << min << ". Please input again." << endl;
    else if (input > max)
      cout << "The input cannot be greater than " << max << ". Please input again." << endl;
    else
      isInputValid = true;
  }
}

void getInput(string prompt, float& input, float min, float max)
{
  bool isInputValid = false; //controls input loop (ie, loop until input is right)
  while (!isInputValid)
  {
    cout << prompt;
    cin >> input;
    if (input < min)
      cout << "The input cannot be less than " << min << ". Please input again." << endl;
    else if (input > max)
      cout << "The input cannot be greater than " << max << ". Please input again." << endl;
    else
      isInputValid = true;
  }
}
